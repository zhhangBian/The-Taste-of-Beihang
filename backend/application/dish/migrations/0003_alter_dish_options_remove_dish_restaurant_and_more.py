# Generated by Django 4.2.3 on 2024-07-26 08:18

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("comment", "0004_alter_comment_options_remove_comment_dish_and_more"),
        ("dish", "0002_remove_dish_restaurant_name_dish_restaurant"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="dish",
            options={
                "ordering": ["-name"],
                "verbose_name": "菜品",
                "verbose_name_plural": "菜品",
            },
        ),
        migrations.RemoveField(
            model_name="dish",
            name="restaurant",
        ),
        migrations.AlterField(
            model_name="dish",
            name="address",
            field=models.CharField(max_length=100, verbose_name="餐厅地址"),
        ),
        migrations.RemoveField(
            model_name="dish",
            name="comments",
        ),
        migrations.AlterField(
            model_name="dish",
            name="description",
            field=models.TextField(max_length=500, verbose_name="描述"),
        ),
        migrations.AlterField(
            model_name="dish",
            name="flavor_rating",
            field=models.FloatField(verbose_name="风味评分"),
        ),
        migrations.AlterField(
            model_name="dish",
            name="name",
            field=models.CharField(max_length=100, verbose_name="菜品名称"),
        ),
        migrations.AlterField(
            model_name="dish",
            name="overall_rating",
            field=models.FloatField(verbose_name="总体评分"),
        ),
        migrations.AlterField(
            model_name="dish",
            name="price",
            field=models.FloatField(verbose_name="价格"),
        ),
        migrations.AlterField(
            model_name="dish",
            name="waiting_time",
            field=models.FloatField(verbose_name="等待时间"),
        ),
        migrations.AddField(
            model_name="dish",
            name="comments",
            field=models.ManyToManyField(
                blank=True,
                default=None,
                null=True,
                related_name="dish_comments",
                to="comment.comment",
                verbose_name="评论",
            ),
        ),
    ]
