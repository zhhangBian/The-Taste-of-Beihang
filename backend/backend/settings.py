"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import os
from pathlib import Path
import yaml
import django
from django.utils.encoding import force_str
django.utils.encoding.force_text = force_str


with open('config.yaml', 'r') as stream:
    _YAML_CONFIG = yaml.safe_load(stream)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = _YAML_CONFIG['DjangoSecretKey']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = _YAML_CONFIG['Debug']

ALLOWED_HOSTS = _YAML_CONFIG['AllowedHosts']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # my apps
    'corsheaders',  # 跨域请求
    'application.restaurant',
    'application.users',
]

MIDDLEWARE = [
    'django.middleware.cache.UpdateCacheMiddleware',    # 更新缓存
    'corsheaders.middleware.CorsMiddleware',  # 跨域请求
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.cache.FetchFromCacheMiddleware',  # 读取缓存
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'backend.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': _YAML_CONFIG['Database']['Engine'],
        'NAME': _YAML_CONFIG['Database']['Name'],
        'USER': _YAML_CONFIG['Database']['User'],
        'PASSWORD': _YAML_CONFIG['Database']['Password'],
        'HOST': _YAML_CONFIG['Database']['Host'],
        'PORT': _YAML_CONFIG['Database']['Port'],
        'OPTIONS': {'init_command': 'SET default_storage_engine=INNODB;', 'charset': 'utf8mb4'}
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': _YAML_CONFIG['Redis']['Location'],
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
        'KEY_PREFIX': _YAML_CONFIG['Redis']['KeyPrefix'],
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

OSS_ENDPOINT = _YAML_CONFIG['OSS']['Endpoint']
OSS_BUCKET_NAME = _YAML_CONFIG['OSS']['Bucket']
OSS_ACCESS_KEY_ID = _YAML_CONFIG['OSS']['AccessKeyId']
OSS_ACCESS_KEY_SECRET = _YAML_CONFIG['OSS']['AccessKeySecret']

OSS_MEDIA_URL = 'https://' + OSS_BUCKET_NAME + '.' + OSS_ENDPOINT + '/' + MEDIA_URL

DEFAULT_FILE_STORAGE = 'django_oss_storage.backends.OssMediaStorage'
# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'users.User'
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = (
    'DELETE',
    'GET',
    'POST',
    'PUT',
)
CORS_ALLOW_HEADERS = (
    'XMLHttpRequest',
    'X_FILENAME',
    'accept-encoding',
    'authorization',
    'content-type',
    'dnt',
    'origin',
    'user-agent',
    'x-csrftoken',
    'x-requested-with',
    'Pragma',
    'Access-Control-Allow-Origin',
)

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = _YAML_CONFIG['Email']['Host']
EMAIL_PORT = _YAML_CONFIG['Email']['Port']
EMAIL_HOST_USER = _YAML_CONFIG['Email']['Username']
EMAIL_HOST_PASSWORD = _YAML_CONFIG['Email']['Password']
EMAIL_FROM = _YAML_CONFIG['Email']['From']
EMAIL_USE_TLS = _YAML_CONFIG['Email']['UseTLS']
